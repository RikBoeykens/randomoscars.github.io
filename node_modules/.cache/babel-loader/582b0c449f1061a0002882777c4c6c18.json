{"ast":null,"code":"import _asyncToGenerator from\"/Users/kylenazario/Developer/randomoscars.github.io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/kylenazario/Developer/randomoscars.github.io/node_modules/@babel/runtime/regenerator/index.js\";import uniq from'ramda/src/uniq';function getOscarCategories(_x){return _getOscarCategories.apply(this,arguments);}function _getOscarCategories(){_getOscarCategories=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(ceremonyNum){var fileResponse,storedCategories,year;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/Data/\".concat(ceremonyNum,\".json\"));case 2:fileResponse=_context.sent;_context.next=5;return fileResponse.json();case 5:storedCategories=_context.sent;year=ceremonyNum+1928;return _context.abrupt(\"return\",storedCategories.map(function(category){category.year=year;return category;}));case 8:case\"end\":return _context.stop();}}},_callee);}));return _getOscarCategories.apply(this,arguments);}export function getAllCategories(){return _getAllCategories.apply(this,arguments);}function _getAllCategories(){_getAllCategories=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var categories,i,oscarCategories;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:categories=[];i=1;case 2:if(!(i<=93)){_context2.next=10;break;}_context2.next=5;return getOscarCategories(i);case 5:oscarCategories=_context2.sent;categories=categories.concat(oscarCategories.map(function(category){return category.name;}));case 7:i++;_context2.next=2;break;case 10:return _context2.abrupt(\"return\",uniq(categories));case 11:case\"end\":return _context2.stop();}}},_callee2);}));return _getAllCategories.apply(this,arguments);}export function getAwardData(_x2,_x3){return _getAwardData.apply(this,arguments);}function _getAwardData(){_getAwardData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(categoryName,year){var ceremonyNum,oscarCategories;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:ceremonyNum=year-1928;_context3.next=3;return getOscarCategories(ceremonyNum);case 3:oscarCategories=_context3.sent;return _context3.abrupt(\"return\",oscarCategories.find(function(category){return category.name===categoryName;}));case 5:case\"end\":return _context3.stop();}}},_callee3);}));return _getAwardData.apply(this,arguments);}export function randomize(){return _randomize.apply(this,arguments);}function _randomize(){_randomize=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var ceremonyNum,oscarCategories,index,categoryName;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:ceremonyNum=Math.floor(Math.random()*92)+1;_context4.next=3;return getOscarCategories(ceremonyNum);case 3:oscarCategories=_context4.sent;index=Math.floor(Math.random()*oscarCategories.length);categoryName=oscarCategories[index].name;return _context4.abrupt(\"return\",[categoryName,ceremonyNum+1928]);case 7:case\"end\":return _context4.stop();}}},_callee4);}));return _randomize.apply(this,arguments);}","map":{"version":3,"sources":["/Users/kylenazario/Developer/randomoscars.github.io/src/Local.connector.ts"],"names":["uniq","getOscarCategories","ceremonyNum","fetch","fileResponse","json","storedCategories","year","map","category","getAllCategories","categories","i","oscarCategories","concat","name","getAwardData","categoryName","find","randomize","Math","floor","random","index","length"],"mappings":"qRACA,MAAOA,CAAAA,IAAP,KAAiB,gBAAjB,C,QAEeC,CAAAA,kB,kKAAf,iBAAkCC,WAAlC,+KAC6BC,CAAAA,KAAK,iBAAUD,WAAV,UADlC,QACQE,YADR,qCAGUA,CAAAA,YAAY,CAACC,IAAb,EAHV,QAEQC,gBAFR,eAIQC,IAJR,CAIeL,WAAW,CAAG,IAJ7B,iCAKSI,gBAAgB,CAACE,GAAjB,CAAqB,SAACC,QAAD,CAAc,CACxCA,QAAQ,CAACF,IAAT,CAAgBA,IAAhB,CACA,MAAOE,CAAAA,QAAP,CACD,CAHM,CALT,wD,qDAWA,eAAsBC,CAAAA,gBAAtB,mD,uGAAO,yKACDC,UADC,CACsB,EADtB,CAEIC,CAFJ,CAEQ,CAFR,aAEWA,CAAC,EAAI,EAFhB,mDAG2BX,CAAAA,kBAAkB,CAACW,CAAD,CAH7C,QAGGC,eAHH,gBAIHF,UAAU,CAAGA,UAAU,CAACG,MAAX,CACXD,eAAe,CAACL,GAAhB,CAAoB,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACM,IAAvB,EAApB,CADW,CAAb,CAJG,OAEoBH,CAAC,EAFrB,iEAQEZ,IAAI,CAACW,UAAD,CARN,2D,mDAWP,eAAsBK,CAAAA,YAAtB,sD,+FAAO,kBACLC,YADK,CAELV,IAFK,sJAICL,WAJD,CAIeK,IAAI,CAAG,IAJtB,wBAKyBN,CAAAA,kBAAkB,CAACC,WAAD,CAL3C,QAKCW,eALD,iDAMEA,eAAe,CAACK,IAAhB,CAAqB,SAACT,QAAD,QAAcA,CAAAA,QAAQ,CAACM,IAAT,GAAkBE,YAAhC,EAArB,CANF,0D,+CASP,eAAsBE,CAAAA,SAAtB,4C,yFAAO,2LACCjB,WADD,CACekB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,EAA3B,EAAiC,CADhD,wBAEyBrB,CAAAA,kBAAkB,CAACC,WAAD,CAF3C,QAECW,eAFD,gBAGCU,KAHD,CAGSH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBT,eAAe,CAACW,MAA3C,CAHT,CAICP,YAJD,CAIgBJ,eAAe,CAACU,KAAD,CAAf,CAAuBR,IAJvC,kCAKE,CAACE,YAAD,CAAef,WAAW,CAAG,IAA7B,CALF,0D","sourcesContent":["import { OscarCategory, OscarYear } from './Models';\nimport uniq from 'ramda/src/uniq';\n\nasync function getOscarCategories(ceremonyNum: number): Promise<OscarYear> {\n  const fileResponse = await fetch(`/Data/${ceremonyNum}.json`);\n  const storedCategories: Array<OscarCategory & { year?: number }> =\n    await fileResponse.json();\n  const year = ceremonyNum + 1928;\n  return storedCategories.map((category) => {\n    category.year = year;\n    return category;\n  });\n}\n\nexport async function getAllCategories(): Promise<string[]> {\n  let categories: string[] = [];\n  for (let i = 1; i <= 93; i++) {\n    const oscarCategories = await getOscarCategories(i);\n    categories = categories.concat(\n      oscarCategories.map((category) => category.name)\n    );\n  }\n  return uniq(categories);\n}\n\nexport async function getAwardData(\n  categoryName: string,\n  year: number\n): Promise<OscarCategory | undefined> {\n  const ceremonyNum = year - 1928;\n  const oscarCategories = await getOscarCategories(ceremonyNum);\n  return oscarCategories.find((category) => category.name === categoryName);\n}\n\nexport async function randomize() {\n  const ceremonyNum = Math.floor(Math.random() * 92) + 1;\n  const oscarCategories = await getOscarCategories(ceremonyNum);\n  const index = Math.floor(Math.random() * oscarCategories.length);\n  const categoryName = oscarCategories[index].name;\n  return [categoryName, ceremonyNum + 1928] as const;\n}\n"]},"metadata":{},"sourceType":"module"}