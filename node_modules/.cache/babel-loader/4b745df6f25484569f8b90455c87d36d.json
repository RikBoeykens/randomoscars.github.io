{"ast":null,"code":"export async function queryWolframAlpha(category, year) {\n  const queryParams = ['appid=7E34XY-YUPTQPH3YV', `input=${encodeURIComponent(`oscars ${category} ${year}`)}`, 'output=json', 'format=plaintext'];\n  const url = `http://api.wolframalpha.com/v1/query?${queryParams.join('&')}`;\n  const response = await fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(url)}`);\n  return await response.json();\n}","map":{"version":3,"sources":["/Users/kylenazario/Developer/randomoscars.github.io/src/WolframAlpha.connector.ts"],"names":["queryWolframAlpha","category","year","queryParams","encodeURIComponent","url","join","response","fetch","json"],"mappings":"AAEA,OAAO,eAAeA,iBAAf,CAAiCC,QAAjC,EAAmDC,IAAnD,EAA2F;AAC9F,QAAMC,WAAW,GAAG,CAAC,yBAAD,EAA6B,SAAQC,kBAAkB,CAAE,UAASH,QAAS,IAAGC,IAAK,EAA5B,CAA+B,EAAtF,EAAyF,aAAzF,EAAwG,kBAAxG,CAApB;AACA,QAAMG,GAAG,GAAI,wCAAuCF,WAAW,CAACG,IAAZ,CAAiB,GAAjB,CAAsB,EAA1E;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCJ,kBAAkB,CAACC,GAAD,CAAM,EAA/D,CAA5B;AACA,SAAO,MAAME,QAAQ,CAACE,IAAT,EAAb;AACH","sourcesContent":["import {WAQueryResponse} from \"./Models\";\n\nexport async function queryWolframAlpha(category: string, year: number): Promise<WAQueryResponse> {\n    const queryParams = ['appid=7E34XY-YUPTQPH3YV', `input=${encodeURIComponent(`oscars ${category} ${year}`)}`, 'output=json', 'format=plaintext'];\n    const url = `http://api.wolframalpha.com/v1/query?${queryParams.join('&')}`;\n    const response = await fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(url)}`);\n    return await response.json()\n}\n"]},"metadata":{},"sourceType":"module"}