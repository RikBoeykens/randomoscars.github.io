{"ast":null,"code":"var _jsxFileName = \"/Users/kylenazario/Developer/randomoscars.github.io/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { queryWolframAlpha } from \"./WolframAlpha.connector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [categoryInfo, setCategoryInfo] = useState(\"\");\n\n  const loadCategory = function () {\n    let category = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"best actress\";\n    let year = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2020;\n    queryWolframAlpha(category, year).then(setCategoryInfo).catch(setCategoryInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => loadCategory(),\n      children: \"Get Random Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nominees, {\n      categoryInfo: categoryInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eh/Evee8JTWlBPo2HFf3etwVqHs=\");\n\n_c = App;\n\nfunction AppHeader() {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random Oscars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hit the button to get a random Oscar category from a random year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = AppHeader;\n\nfunction Nominees(props) {\n  const nominees = props.categoryInfo.length ? props.categoryInfo.split(\"\\n\") : [];\n  nominees.shift();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: nominees.map(nominee => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: nominee\n      }, nominee, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Nominees;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppHeader\");\n$RefreshReg$(_c3, \"Nominees\");","map":{"version":3,"sources":["/Users/kylenazario/Developer/randomoscars.github.io/src/App.tsx"],"names":["React","useState","queryWolframAlpha","App","categoryInfo","setCategoryInfo","loadCategory","category","year","then","catch","AppHeader","Nominees","props","nominees","length","split","shift","map","nominee"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMK,YAAY,GAAG,YAA4C;AAAA,QAA3CC,QAA2C,uEAAhC,cAAgC;AAAA,QAAhBC,IAAgB,uEAAT,IAAS;AAC/DN,IAAAA,iBAAiB,CAACK,QAAD,EAAWC,IAAX,CAAjB,CACGC,IADH,CACQJ,eADR,EAEGK,KAFH,CAESL,eAFT;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMC,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,YAAY,EAAEF;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhBQD,G;;KAAAA,G;;AAkBT,SAASQ,SAAT,GAAqB;AACnB,sBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQA,S;;AAST,SAASC,QAAT,CAAkBC,KAAlB,EAAmD;AACjD,QAAMC,QAAQ,GAAGD,KAAK,CAACT,YAAN,CAAmBW,MAAnB,GACbF,KAAK,CAACT,YAAN,CAAmBY,KAAnB,CAAyB,IAAzB,CADa,GAEb,EAFJ;AAGAF,EAAAA,QAAQ,CAACG,KAAT;AACA,sBACE;AAAA,2BACE;AAAA,gBACGH,QAAQ,CAACI,GAAT,CAAcC,OAAD,iBACZ;AAAA,kBAAmBA;AAAnB,SAASA,OAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;MAdQP,Q;AAgBT,eAAeT,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { queryWolframAlpha } from \"./WolframAlpha.connector\";\n\nfunction App() {\n  const [categoryInfo, setCategoryInfo] = useState(\"\");\n\n  const loadCategory = (category = \"best actress\", year = 2020) => {\n    queryWolframAlpha(category, year)\n      .then(setCategoryInfo)\n      .catch(setCategoryInfo);\n  };\n\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <button onClick={() => loadCategory()}>Get Random Category</button>\n      <Nominees categoryInfo={categoryInfo} />\n    </div>\n  );\n}\n\nfunction AppHeader() {\n  return (\n    <header className=\"App-header\">\n      <h1>Random Oscars</h1>\n      <p>Hit the button to get a random Oscar category from a random year</p>\n    </header>\n  );\n}\n\nfunction Nominees(props: { categoryInfo: string }) {\n  const nominees = props.categoryInfo.length\n    ? props.categoryInfo.split(\"\\n\")\n    : [];\n  nominees.shift();\n  return (\n    <section>\n      <ul>\n        {nominees.map((nominee) => (\n          <li key={nominee}>{nominee}</li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}