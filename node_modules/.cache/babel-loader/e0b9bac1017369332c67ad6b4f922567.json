{"ast":null,"code":"var _jsxFileName = \"/Users/kylenazario/Developer/randomoscars.github.io/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { queryWolframAlpha } from \"./WolframAlpha.connector\";\nimport { getRandomCategory, getRandomYear } from \"./Randomizer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [categoryInfo, setCategoryInfo] = useState(\"\");\n  const [category, setCategory] = useState(undefined);\n  const [year, setYear] = useState(undefined);\n  const firstRender = useRef(true);\n\n  const randomize = () => {\n    setCategory(getRandomCategory());\n    setYear(getRandomYear());\n  };\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n\n    queryWolframAlpha(getRandomCategory(), getRandomYear()).then(setCategoryInfo).catch(setCategoryInfo);\n  }, [category, year]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => randomize(),\n      children: \"Get Random Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nominees, {\n      categoryInfo: categoryInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HZs/Lujm92Ek98O6wcD/1Vu6sg8=\");\n\n_c = App;\n\nfunction AppHeader() {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random Oscars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hit the button to get a random Oscar category from a random year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = AppHeader;\n\nfunction Nominees(props) {\n  const nominees = props.categoryInfo.length ? props.categoryInfo.split(\"\\n\") : [];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: nominees.map(nominee => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: nominee\n      }, nominee, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Nominees;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppHeader\");\n$RefreshReg$(_c3, \"Nominees\");","map":{"version":3,"sources":["/Users/kylenazario/Developer/randomoscars.github.io/src/App.tsx"],"names":["React","useEffect","useRef","useState","queryWolframAlpha","getRandomCategory","getRandomYear","App","categoryInfo","setCategoryInfo","category","setCategory","undefined","year","setYear","firstRender","randomize","current","then","catch","AppHeader","Nominees","props","nominees","length","split","map","nominee"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,cAAjD;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAqBS,SAArB,CAAxC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAqBS,SAArB,CAAhC;AACA,QAAMG,WAAW,GAAGb,MAAM,CAAC,IAAD,CAA1B;;AAEA,QAAMc,SAAS,GAAG,MAAM;AACtBL,IAAAA,WAAW,CAACN,iBAAiB,EAAlB,CAAX;AACAS,IAAAA,OAAO,CAACR,aAAa,EAAd,CAAP;AACD,GAHD;;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,WAAW,CAACE,OAAhB,EAAyB;AACvBF,MAAAA,WAAW,CAACE,OAAZ,GAAsB,KAAtB;AACA;AACD;;AACDb,IAAAA,iBAAiB,CAACC,iBAAiB,EAAlB,EAAsBC,aAAa,EAAnC,CAAjB,CACGY,IADH,CACQT,eADR,EAEGU,KAFH,CAESV,eAFT;AAGD,GARQ,EAQN,CAACC,QAAD,EAAWG,IAAX,CARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMG,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,YAAY,EAAER;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA5BQD,G;;KAAAA,G;;AA8BT,SAASa,SAAT,GAAqB;AACnB,sBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAPQA,S;;AAST,SAASC,QAAT,CAAkBC,KAAlB,EAAmD;AACjD,QAAMC,QAAQ,GAAGD,KAAK,CAACd,YAAN,CAAmBgB,MAAnB,GACbF,KAAK,CAACd,YAAN,CAAmBiB,KAAnB,CAAyB,IAAzB,CADa,GAEb,EAFJ;AAGA,sBACE;AAAA,2BACE;AAAA,gBACGF,QAAQ,CAACG,GAAT,CAAcC,OAAD,iBACZ;AAAA,kBAAmBA;AAAnB,SAASA,OAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;MAbQN,Q;AAeT,eAAed,GAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { queryWolframAlpha } from \"./WolframAlpha.connector\";\nimport { getRandomCategory, getRandomYear } from \"./Randomizer\";\n\nfunction App() {\n  const [categoryInfo, setCategoryInfo] = useState(\"\");\n  const [category, setCategory] = useState<string | undefined>(undefined);\n  const [year, setYear] = useState<number | undefined>(undefined);\n  const firstRender = useRef(true);\n\n  const randomize = () => {\n    setCategory(getRandomCategory());\n    setYear(getRandomYear());\n  };\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n    queryWolframAlpha(getRandomCategory(), getRandomYear())\n      .then(setCategoryInfo)\n      .catch(setCategoryInfo);\n  }, [category, year]);\n\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <button onClick={() => randomize()}>Get Random Category</button>\n      <Nominees categoryInfo={categoryInfo} />\n    </div>\n  );\n}\n\nfunction AppHeader() {\n  return (\n    <header className=\"App-header\">\n      <h1>Random Oscars</h1>\n      <p>Hit the button to get a random Oscar category from a random year</p>\n    </header>\n  );\n}\n\nfunction Nominees(props: { categoryInfo: string }) {\n  const nominees = props.categoryInfo.length\n    ? props.categoryInfo.split(\"\\n\")\n    : [];\n  return (\n    <section>\n      <ul>\n        {nominees.map((nominee) => (\n          <li key={nominee}>{nominee}</li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}