{"ast":null,"code":"var _jsxFileName = \"/Users/kylenazario/Developer/randomoscars.github.io/src/FormInputs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getAllCategories } from './Local.connector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function IconButtonLabel(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(props.icon, {\n      style: {\n        alignSelf: 'end'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginLeft: '1rem'\n      },\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = IconButtonLabel;\nexport function YearInput(props) {\n  const min = 1929;\n  const max = 2021;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: props.year,\n    onChange: e => props.setYear(parseInt(e.target.value)),\n    onBlur: e => {\n      const year = parseInt(e.target.value);\n      const yearWithinBounds = Math.min(max, Math.max(year, min));\n      props.setYear(yearWithinBounds);\n    },\n    type: \"number\",\n    placeholder: \"Year\",\n    min: min,\n    max: max,\n    style: {\n      width: '4rem'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c2 = YearInput;\nexport function CategorySelect(props) {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    getAllCategories().then(setCategories).catch(() => setCategories([]));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: props.category,\n    onChange: e => props.setCategory(e.target.value),\n    defaultValue: undefined,\n    style: {\n      width: '20rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: undefined,\n      disabled: true,\n      children: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: cat,\n      children: cat\n    }, cat, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategorySelect, \"NvoRToPXLE9FTWFiWbOh1kiS3L0=\");\n\n_c3 = CategorySelect;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IconButtonLabel\");\n$RefreshReg$(_c2, \"YearInput\");\n$RefreshReg$(_c3, \"CategorySelect\");","map":{"version":3,"sources":["/Users/kylenazario/Developer/randomoscars.github.io/src/FormInputs.tsx"],"names":["React","useEffect","useState","getAllCategories","IconButtonLabel","props","display","alignSelf","marginLeft","label","YearInput","min","max","year","e","setYear","parseInt","target","value","yearWithinBounds","Math","width","CategorySelect","categories","setCategories","then","catch","category","setCategory","undefined","map","cat"],"mappings":";;;AACA,OAAOA,KAAP,IAA0CC,SAA1C,EAAqDC,QAArD,QAAqE,OAArE;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAmE;AACxE,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,4BACE,QAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAb;AAAA,gBAAsCH,KAAK,CAACI;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;KAPeL,e;AAShB,OAAO,SAASM,SAAT,CAAmBL,KAAnB,EAGJ;AACD,QAAMM,GAAG,GAAG,IAAZ;AACA,QAAMC,GAAG,GAAG,IAAZ;AACA,sBACE;AACE,IAAA,KAAK,EAAEP,KAAK,CAACQ,IADf;AAEE,IAAA,QAAQ,EAAGC,CAAD,IAAOT,KAAK,CAACU,OAAN,CAAcC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAtB,CAFnB;AAGE,IAAA,MAAM,EAAGJ,CAAD,IAAO;AACb,YAAMD,IAAI,GAAGG,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAArB;AACA,YAAMC,gBAAgB,GAAGC,IAAI,CAACT,GAAL,CAASC,GAAT,EAAcQ,IAAI,CAACR,GAAL,CAASC,IAAT,EAAeF,GAAf,CAAd,CAAzB;AACAN,MAAAA,KAAK,CAACU,OAAN,CAAcI,gBAAd;AACD,KAPH;AAQE,IAAA,IAAI,EAAC,QARP;AASE,IAAA,WAAW,EAAC,MATd;AAUE,IAAA,GAAG,EAAER,GAVP;AAWE,IAAA,GAAG,EAAEC,GAXP;AAYE,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAT;AAZT;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;MAtBeX,S;AAwBhB,OAAO,SAASY,cAAT,CAAwBjB,KAAxB,EAGJ;AAAA;;AACD,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,gBAAgB,GACbsB,IADH,CACQD,aADR,EAEGE,KAFH,CAES,MAAMF,aAAa,CAAC,EAAD,CAF5B;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AACE,IAAA,KAAK,EAAEnB,KAAK,CAACsB,QADf;AAEE,IAAA,QAAQ,EAAGb,CAAD,IAAOT,KAAK,CAACuB,WAAN,CAAkBd,CAAC,CAACG,MAAF,CAASC,KAA3B,CAFnB;AAGE,IAAA,YAAY,EAAEW,SAHhB;AAIE,IAAA,KAAK,EAAE;AAAER,MAAAA,KAAK,EAAE;AAAT,KAJT;AAAA,4BAME;AAAQ,MAAA,KAAK,EAAEQ,SAAf;AAA0B,MAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EASGN,UAAU,CAACO,GAAX,CAAgBC,GAAD,iBACd;AAAQ,MAAA,KAAK,EAAEA,GAAf;AAAA,gBACGA;AADH,OAAyBA,GAAzB;AAAA;AAAA;AAAA;AAAA,YADD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA7BeT,c;;MAAAA,c","sourcesContent":["import { IconType } from 'react-icons';\nimport React, { Dispatch, SetStateAction, useEffect, useState } from 'react';\nimport { getAllCategories } from './Local.connector';\n\nexport function IconButtonLabel(props: { label: string; icon: IconType }) {\n  return (\n    <div style={{ display: 'flex' }}>\n      <props.icon style={{ alignSelf: 'end' }} />\n      <span style={{ marginLeft: '1rem' }}>{props.label}</span>\n    </div>\n  );\n}\n\nexport function YearInput(props: {\n  year: number | undefined;\n  setYear: Dispatch<SetStateAction<number | undefined>>;\n}) {\n  const min = 1929;\n  const max = 2021;\n  return (\n    <input\n      value={props.year}\n      onChange={(e) => props.setYear(parseInt(e.target.value))}\n      onBlur={(e) => {\n        const year = parseInt(e.target.value);\n        const yearWithinBounds = Math.min(max, Math.max(year, min));\n        props.setYear(yearWithinBounds);\n      }}\n      type=\"number\"\n      placeholder=\"Year\"\n      min={min}\n      max={max}\n      style={{ width: '4rem' }}\n    />\n  );\n}\n\nexport function CategorySelect(props: {\n  category: string | undefined;\n  setCategory: Dispatch<SetStateAction<string | undefined>>;\n}) {\n  const [categories, setCategories] = useState([] as string[]);\n\n  useEffect(() => {\n    getAllCategories()\n      .then(setCategories)\n      .catch(() => setCategories([]));\n  }, []);\n\n  return (\n    <select\n      value={props.category}\n      onChange={(e) => props.setCategory(e.target.value)}\n      defaultValue={undefined}\n      style={{ width: '20rem' }}\n    >\n      <option value={undefined} disabled>\n        Category\n      </option>\n      {categories.map((cat) => (\n        <option value={cat} key={cat}>\n          {cat}\n        </option>\n      ))}\n    </select>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}