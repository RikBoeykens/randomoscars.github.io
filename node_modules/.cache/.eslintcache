[{"/Users/kylenazario/Developer/randomoscars.github.io/src/index.tsx":"1","/Users/kylenazario/Developer/randomoscars.github.io/src/App.tsx":"2","/Users/kylenazario/Developer/randomoscars.github.io/src/Models.ts":"3","/Users/kylenazario/Developer/randomoscars.github.io/src/FormInputs.tsx":"4","/Users/kylenazario/Developer/randomoscars.github.io/src/StaticComponents.tsx":"5","/Users/kylenazario/Developer/randomoscars.github.io/src/Local.connector.ts":"6"},{"size":197,"mtime":1642128322636,"results":"7","hashOfConfig":"8"},{"size":2985,"mtime":1642190265652,"results":"9","hashOfConfig":"8"},{"size":901,"mtime":1642189576749,"results":"10","hashOfConfig":"8"},{"size":1735,"mtime":1642184441400,"results":"11","hashOfConfig":"8"},{"size":1233,"mtime":1642189811446,"results":"12","hashOfConfig":"8"},{"size":1416,"mtime":1642189382277,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1f9rsko",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/kylenazario/Developer/randomoscars.github.io/src/index.tsx",[],["29","30"],"/Users/kylenazario/Developer/randomoscars.github.io/src/App.tsx",["31"],"import React, { useState } from 'react';\nimport { BsSearch, BsShuffle } from 'react-icons/bs';\nimport { CategorySelect, IconButtonLabel, YearInput } from './FormInputs';\nimport { AppFooter, AppHeader, SiteExplainer } from './StaticComponents';\nimport { OscarCategory } from './Models';\nimport { getAwardData, randomize } from './Local.connector';\n\nfunction App() {\n  const [awardData, setAwardData] = useState(\n    undefined as undefined | OscarCategory\n  );\n  const [category, setCategory] = useState<string | undefined>(undefined);\n  const [year, setYear] = useState<number | undefined>(undefined);\n\n  const search = () => {\n    setAwardData(undefined);\n    getAwardData(category as string, year as number)\n      .then(setAwardData)\n      .catch(() => {});\n  };\n\n  const randomizeForm = () => {\n    randomize().then(([randomCategory, randomYear]) => {\n      setCategory(randomCategory);\n      setYear(randomYear);\n    });\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        height: '90vh',\n      }}\n    >\n      <div>\n        <AppHeader />\n        <section>\n          <div style={{ display: 'flex' }}>\n            <CategorySelect category={category} setCategory={setCategory} />\n            <YearInput year={year} setYear={setYear} />\n            <button onClick={() => randomizeForm()}>\n              <IconButtonLabel label=\"Randomize\" icon={BsShuffle} />\n            </button>\n          </div>\n          <button onClick={() => search()} disabled={!category || !year}>\n            <IconButtonLabel label=\"Search\" icon={BsSearch} />\n          </button>\n        </section>\n        <section>\n          <NomineeHeader awardData={awardData} />\n          <Nominees awardData={awardData} />\n        </section>\n      </div>\n      <div>\n        <section>\n          <hr />\n          <SiteExplainer />\n        </section>\n        <AppFooter />\n      </div>\n    </div>\n  );\n}\n\nfunction NomineeHeader(props: { awardData: OscarCategory | undefined }) {\n  const titleItems = [props.awardData?.name, props.awardData?.year.toString()]\n    .filter((item) => item?.length ?? 0 > 0)\n    .join(' | ');\n  return <h2>{titleItems}</h2>;\n}\n\nfunction Nominees(props: { awardData: OscarCategory | undefined }) {\n  return (\n    <table>\n      <tbody>\n        {props.awardData?.candidates.map((candidate) => {\n          const candidateWork = candidate.target.join(', ');\n          const candidateName = candidate.for.join(', ');\n          return (\n            <tr\n              key={candidateName}\n              style={{\n                fontWeight: candidate.won ? 'bold' : 'normal',\n                textDecoration: candidate.won ? 'underline' : 'none',\n              }}\n            >\n              <td style={{ padding: '1rem' }}>{candidateName}</td>\n              <td style={{ padding: '1rem' }}>{candidateWork}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default App;\n","/Users/kylenazario/Developer/randomoscars.github.io/src/Models.ts",[],"/Users/kylenazario/Developer/randomoscars.github.io/src/FormInputs.tsx",[],"/Users/kylenazario/Developer/randomoscars.github.io/src/StaticComponents.tsx",["32","33","34","35"],"import React from 'react';\n\nexport function AppHeader() {\n  return (\n    <header className=\"App-header\">\n      <h1>Random Oscars</h1>\n    </header>\n  );\n}\n\nexport function AppFooter() {\n  return (\n    <footer>\n      <p>\n        Created by{' '}\n        <a href=\"https://www.kylenazario.com\" target=\"_blank\">\n          Kyle Nazario\n        </a>{' '}\n        for the podcast{' '}\n        <a href=\"https://twitter.com/blankcheckpod\" target=\"_blank\">\n          Blank Check\n        </a>\n        .\n      </p>\n      <p>\n        View the{' '}\n        <a\n          href=\"https://github.com/randomoscars/randomoscars.github.io\"\n          target=\"_blank\"\n        >\n          source code\n        </a>\n        .\n      </p>\n    </footer>\n  );\n}\n\nexport function SiteExplainer() {\n  return (\n    <details>\n      <summary>How to use this site</summary>\n      <p>\n        The site indexes Academy Awards from 1929 - 2021. Categories have\n        changed over time, so not every year has every category.\n      </p>\n      <p>\n        Data courtesy of{' '}\n        <a href=\"https://github.com/AminFadaee/awards/\" target=\"_blank\">\n          @AminFadaee\n        </a>\n        . May be missing some people in Song and Score.\n      </p>\n    </details>\n  );\n}\n","/Users/kylenazario/Developer/randomoscars.github.io/src/Local.connector.ts",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":70,"column":39,"nodeType":"42","messageId":"43","endLine":70,"endColumn":44},{"ruleId":"44","severity":1,"message":"45","line":16,"column":9,"nodeType":"46","messageId":"47","endLine":16,"endColumn":63,"fix":"48"},{"ruleId":"44","severity":1,"message":"45","line":20,"column":9,"nodeType":"46","messageId":"47","endLine":20,"endColumn":69,"fix":"49"},{"ruleId":"44","severity":1,"message":"45","line":27,"column":9,"nodeType":"46","messageId":"47","endLine":30,"endColumn":10,"fix":"50"},{"ruleId":"44","severity":1,"message":"45","line":49,"column":9,"nodeType":"46","messageId":"47","endLine":49,"endColumn":73,"fix":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"54","text":"55"},{"range":"56","text":"55"},{"range":"57","text":"55"},{"range":"58","text":"55"},"no-global-assign","no-unsafe-negation",[305,305]," rel=\"noreferrer\"",[444,444],[642,642],[1107,1107]]